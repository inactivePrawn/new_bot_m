from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from config import BOT_TOKEN, GROUP_CHAT_ID

bot = Bot(BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

class Form(StatesGroup):
    city = State()
    name = State()
    debt = State()
    payment = State()
    overdue = State()
    income = State()
    credit = State()
    property = State()
    custom_property = State()
    phone = State()

@dp.message(F.text == "/start")
async def cmd_start(message: Message, state: FSMContext):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é")],
        [KeyboardButton(text="–û –∫–æ–º–ø–∞–Ω–∏–∏")],
        [KeyboardButton(text="–ù–∞—à–∏ –æ—Ñ–∏—Å—ã")]
    ])
    await message.answer("–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?", reply_markup=keyboard)

@dp.message(F.text == "–û –∫–æ–º–ø–∞–Ω–∏–∏")
async def about_company(message: Message):
    await message.answer("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å: https://avers-34.ru/")

@dp.message(F.text == "–ù–∞—à–∏ –æ—Ñ–∏—Å—ã")
async def office_info(message: Message):
    await message.answer("–ù–∞—à –æ—Ñ–∏—Å: https://yandex.ru/maps/org/yuk_avers/94070841340/?ll=44.468825%2C48.723016&z=16")

@dp.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é")
async def consultation_start(message: Message, state: FSMContext):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–í–æ–ª–≥–æ–≥—Ä–∞–¥")],
        [KeyboardButton(text="–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä")],
        [KeyboardButton(text="–ù–µ–≤–∏–Ω–Ω–æ–º—ã—Å—Å–∫")],
        [KeyboardButton(text="–ú–∏—Ö–∞–π–ª–æ–≤–∫–∞")]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=keyboard)
    await state.set_state(Form.city)

@dp.message(Form.city)
async def get_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –§–ò–û:")
    await state.set_state(Form.name)

@dp.message(Form.name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–º–µ–Ω–µ–µ 300 000")],
        [KeyboardButton(text="–ë–æ–ª–µ–µ 300 000")],
        [KeyboardButton(text="–ë–æ–ª–µ–µ 500 000")],
        [KeyboardButton(text="–ë–æ–ª–µ–µ 1 000 000")]
    ])
    await message.answer("–°—É–º–º–∞ –í–∞—à–µ–≥–æ –¥–æ–ª–≥–∞:", reply_markup=keyboard)
    await state.set_state(Form.debt)

@dp.message(Form.debt)
async def get_debt(message: Message, state: FSMContext):
    await state.update_data(debt=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –í–∞—à –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂?")
    await state.set_state(Form.payment)

@dp.message(Form.payment)
async def get_payment(message: Message, state: FSMContext):
    await state.update_data(payment=message.text)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–î–∞")],
        [KeyboardButton(text="–ù–µ—Ç")]
    ])
    await message.answer("–ë—ã–ª–∏ –ª–∏ —É –í–∞—Å –ø—Ä–æ—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π?", reply_markup=keyboard)
    await state.set_state(Form.overdue)

@dp.message(Form.overdue)
async def get_overdue(message: Message, state: FSMContext):
    await state.update_data(overdue=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –í–∞—à –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥?")
    await state.set_state(Form.income)

@dp.message(Form.income)
async def get_income(message: Message, state: FSMContext):
    await state.update_data(income=message.text)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–î–∞")],
        [KeyboardButton(text="–ù–µ—Ç")]
    ])
    await message.answer("–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç –∏–ª–∏ –ò–ø–æ—Ç–µ–∫–∞?", reply_markup=keyboard)
    await state.set_state(Form.credit)

@dp.message(Form.credit)
async def get_credit(message: Message, state: FSMContext):
    await state.update_data(credit=message.text)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
        [KeyboardButton(text="–ï—Å—Ç—å —Ç–æ–ª—å–∫–æ –∂–∏–ª—å–µ")],
        [KeyboardButton(text="–ï—Å—Ç—å –ê–≤—Ç–æ")],
        [KeyboardButton(text="–ï—Å—Ç—å –∏–Ω–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ")],
        [KeyboardButton(text="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å —Å–∞–º–æ–º—É")]
    ])
    await message.answer("–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –∏–º—É—â–µ—Å—Ç–≤–æ?", reply_markup=keyboard)
    await state.set_state(Form.property)

@dp.message(Form.property)
async def get_property(message: Message, state: FSMContext):
    if message.text == "–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å —Å–∞–º–æ–º—É":
        await message.answer("–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –∏–º—É—â–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é")
        await state.set_state(Form.custom_property)
    else:
        await state.update_data(property=message.text)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7...")
        await state.set_state(Form.phone)

@dp.message(Form.custom_property)
async def get_custom_property(message: Message, state: FSMContext):
    await state.update_data(property=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7...")
    await state.set_state(Form.phone)

@dp.message(Form.phone)
async def get_phone(message: Message, state: FSMContext):
    if not message.text.startswith("+7"):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7...")
        return
    await state.update_data(phone=message.text)
    data = await state.get_data()

    text = (
        f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</b>

"
        f"üìç –ì–æ—Ä–æ–¥: {data['city']}
"
        f"üë§ –§–ò–û: {data['name']}
"
        f"üí∞ –î–æ–ª–≥: {data['debt']}
"
        f"üìÜ –ü–ª–∞—Ç–µ–∂: {data['payment']}
"
        f"‚è∞ –ü—Ä–æ—Å—Ä–æ—á–∫–∞: {data['overdue']}
"
        f"üí∏ –î–æ—Ö–æ–¥: {data['income']}
"
        f"üè¶ –ö—Ä–µ–¥–∏—Ç/–ò–ø–æ—Ç–µ–∫–∞: {data['credit']}
"
        f"üè† –ò–º—É—â–µ—Å—Ç–≤–æ: {data['property']}
"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}"
    )

    await bot.send_message(GROUP_CHAT_ID, text)
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –ú—ã –º–æ–∂–µ–º –í–∞–º –ø–æ–º–æ—á—å, –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞.")
    await state.clear()
